document.addEventListener('DOMContentLoaded', () => {
    // –î–µ—Ñ–∏–Ω–∏—Ü–∏–∏ –Ω–∞ —Ç–µ–º–∏—Ç–µ - –≤–µ—á–µ –∫–∞—Ç–æ –æ–±–µ–∫—Ç–∏
    const ALL_THEMES = {
        –ø—Ä–µ–≤–æ–∑–Ω–∏_—Å—Ä–µ–¥—Å—Ç–≤–∞: [
            { id: 'bus', image: 'images/–ø—Ä–µ–≤–æ–∑–Ω–∏_—Å—Ä–µ–¥—Å—Ç–≤–∞/bus.jpg', sound: 'audio/object_sounds/bus.mp3' },
            // ... –¥–æ–±–∞–≤–∏ –¥—Ä—É–≥–∏
        ],
        animals: [
            { id: 'dog', image: 'images/animals/dog.jpg', sound: 'audio/object_sounds/dog.mp3' },
            { id: 'cat', image: 'images/animals/cat.jpg', sound: 'audio/object_sounds/cat.mp3' },
            // ... –¥–æ–±–∞–≤–∏ –¥—Ä—É–≥–∏
        ],
        flowers: [ /* ... */ ],
        –ø—Ç–∏—Ü–∏: [ /* ... */ ]
    };

    // ... (DOM –µ–ª–µ–º–µ–Ω—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∞—Ç —Å—ä—â–∏—Ç–µ) ...

    const gameState = {
        // ...
        hiddenCardElement: null, // –í–µ—á–µ —â–µ –ø–∞–∑–∏–º —Ü–µ–ª–∏—è card –µ–ª–µ–º–µ–Ω—Ç
        originalPicData: null,
    };

    // ... (–æ—Å—Ç–∞–Ω–∞–ª–∏—Ç–µ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏)

    // --- –§—É–Ω–∫—Ü–∏–∏ ---

    function renderGamePics() {
        gamePicsEl.innerHTML = ''; // –ò–∑—á–∏—Å—Ç–≤–∞–º–µ –ø—Ä–µ–¥–∏—à–Ω–æ—Ç–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ
        
        // –õ–æ–≥–∏–∫–∞—Ç–∞ –∑–∞ —Ä–∞–∑–±—ä—Ä–∫–≤–∞–Ω–µ –∏ –∏–∑–±–∏—Ä–∞–Ω–µ –æ—Å—Ç–∞–≤–∞ —Å—ä—â–∞—Ç–∞
        const themeKey = document.querySelector('input[name="theme"]:checked').value;
        const allThemeImages = ALL_THEMES[themeKey];
        const shuffledImages = [...allThemeImages].sort(() => 0.5 - Math.random());
        const selectedGamePicsData = shuffledImages.slice(0, 3); // –ó–∞—Å–µ–≥–∞ –µ —Ñ–∏–∫—Å–∏—Ä–∞–Ω–æ –Ω–∞ 3
        
        gameState.selectedGamePics = selectedGamePicsData;

        selectedGamePicsData.forEach((picData) => {
            // üåü –°–™–ó–î–ê–í–ê–ù–ï –ù–ê –ù–û–í–ê–¢–ê –°–¢–†–£–ö–¢–£–†–ê –ù–ê –ö–ê–†–¢–ê–¢–ê üåü
            const card = document.createElement('div');
            card.className = 'game-card';
            card.dataset.id = picData.id; // –ò–∑–ø–æ–ª–∑–≤–∞–º–µ ID –∑–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è

            const mainImage = document.createElement('img');
            mainImage.src = picData.image;
            mainImage.alt = picData.id;
            mainImage.className = 'card-image is-visible'; // –í–∏–¥–∏–º–∞ –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ

            const placeholderImage = document.createElement('img');
            placeholderImage.src = 'images/hide.png'; // –ü—ä—Ç—è—Ç –¥–æ –ø–∏—Ç–∞–Ω–∫–∞—Ç–∞
            placeholderImage.alt = '–°–∫—Ä–∏—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞';
            placeholderImage.className = 'card-placeholder is-hidden'; // –°–∫—Ä–∏—Ç–∞ –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ

            card.appendChild(mainImage);
            card.appendChild(placeholderImage);
            gamePicsEl.appendChild(card);
        });
    }

    function hideRandomPicture() {
        if (gameState.awaitingChoice) return;
        restoreHiddenImage(); // –ü—ä—Ä–≤–æ –≤—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–º–µ, –∞–∫–æ –∏–º–∞ –Ω–µ—â–æ —Å–∫—Ä–∏—Ç–æ

        const cards = gamePicsEl.querySelectorAll('.game-card');
        const hiddenIndex = Math.floor(Math.random() * cards.length);
        
        gameState.hiddenCardElement = cards[hiddenIndex];
        const hiddenPicId = gameState.hiddenCardElement.dataset.id;
        gameState.originalPicData = gameState.selectedGamePics.find(p => p.id === hiddenPicId);
        
        // üåü –ù–û–í –ù–ê–ß–ò–ù –ù–ê –°–ö–†–ò–í–ê–ù–ï –ß–†–ï–ó –°–ú–Ø–ù–ê –ù–ê –ö–õ–ê–°–û–í–ï üåü
        const mainImage = gameState.hiddenCardElement.querySelector('.card-image');
        const placeholderImage = gameState.hiddenCardElement.querySelector('.card-placeholder');

        mainImage.classList.remove('is-visible');
        mainImage.classList.add('is-hidden');
        
        placeholderImage.classList.remove('is-hidden');
        placeholderImage.classList.add('is-visible');

        gameState.awaitingChoice = true;
        startBtn.classList.add('hidden');
        showMessage('–ü–æ–∑–Ω–∞–π –∫–æ–µ –ª–∏–ø—Å–≤–∞!', 'info');
    }
    
    function restoreHiddenImage() {
        if (gameState.hiddenCardElement) {
            // üåü –ù–û–í –ù–ê–ß–ò–ù –ù–ê –í–™–ó–°–¢–ê–ù–û–í–Ø–í–ê–ù–ï üåü
            const mainImage = gameState.hiddenCardElement.querySelector('.card-image');
            const placeholderImage = gameState.hiddenCardElement.querySelector('.card-placeholder');

            mainImage.classList.add('is-visible');
            mainImage.classList.remove('is-hidden');

            placeholderImage.classList.add('is-hidden');
            placeholderImage.classList.remove('is-visible');

            gameState.hiddenCardElement = null;
        }
    }

    function chooseHandler(e) {
        if (!gameState.awaitingChoice) return;

        const chosenId = e.target.dataset.id;
        const hiddenId = gameState.originalPicData.id;

        if (chosenId === hiddenId) {
            showMessage('–ë—Ä–∞–≤–æ!', 'success'); // ... –∏ –∞—É–¥–∏–æ –ª–æ–≥–∏–∫–∞—Ç–∞
            restoreHiddenImage(); // –í—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–º–µ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ç–∞
            gameState.awaitingChoice = false;
            reloadBtn.classList.remove('hidden');
            startBtn.classList.add('hidden');
        } else {
            showMessage('–û–ø–∏—Ç–∞–π –ø–∞–∫!', 'error'); // ... –∏ –∞—É–¥–∏–æ –ª–æ–≥–∏–∫–∞—Ç–∞
        }
    }
    
    // ... (–æ—Å—Ç–∞–Ω–∞–ª–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞—Ç–æ resetGameState, showMessage –∏ —Ç.–Ω. —Å—ä—â–æ —Ç—Ä—è–±–≤–∞
    // –¥–∞ —Å–µ –∞–¥–∞–ø—Ç–∏—Ä–∞—Ç –¥–∞ —Ä–∞–±–æ—Ç—è—Ç —Å restoreHiddenImage())
    
    // ... (—Å–ª—É—à–∞—Ç–µ–ª–∏—Ç–µ –Ω–∞ —Å—ä–±–∏—Ç–∏—è –æ—Å—Ç–∞–≤–∞—Ç —Å—ä—â–∏—Ç–µ)
});
